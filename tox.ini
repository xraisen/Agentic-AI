[tox]
envlist =
    py38,
    py39,
    py310,
    py311,
    lint,
    docs,
    coverage

isolated_build = True

[testenv]
description = run unit tests
deps =
    pytest>=7.0.0
    pytest-asyncio>=0.18.0
    pytest-cov>=3.0.0
    pytest-mock>=3.10.0
    pytest-xdist>=3.3.0
commands =
    pytest {posargs:tests}

[testenv:lint]
description = run linters
skip_install = true
deps =
    pre-commit>=2.20.0
commands =
    pre-commit run --all-files

[testenv:docs]
description = build documentation
deps =
    Sphinx>=5.0.0
    sphinx-rtd-theme>=1.0.0
    sphinx-autodoc-typehints>=1.24.0
    sphinx-copybutton>=0.5.0
commands =
    sphinx-build -b html docs/source docs/build/html

[testenv:coverage]
description = create coverage report
deps =
    pytest>=7.0.0
    pytest-cov>=3.0.0
commands =
    pytest --cov=src --cov-report=html {posargs:tests}

[flake8]
max-line-length = 88
extend-ignore = E203
exclude =
    .git,
    __pycache__,
    build,
    dist,
    *.egg-info,
    .tox,
    .venv,
    venv,
    env,
    docs

[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_optional = True

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = False
disallow_incomplete_defs = False

[coverage:run]
branch = True
source = src
omit =
    tests/*
    setup.py
    conftest.py
    */__init__.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
ignore_errors = True
omit =
    tests/*
    setup.py
    conftest.py
    */__init__.py

[bandit]
exclude_dirs = tests
skips = B101

[isort]
profile = black
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
line_length = 88
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "DJANGO", "FIRSTPARTY", "LOCALFOLDER"]
known_first_party = ["agentic_ai"]
known_django = ["django"]
suffixes = [".py", ".pyi"]

[black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/docs
''' 