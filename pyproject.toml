[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "agentic-ai"
description = "A powerful AI assistant platform that seamlessly integrates across Windows, macOS, VS Code, and Chrome"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Agentic AI Team", email = "team@agentic-ai.example.com"},
]
keywords = ["ai", "assistant", "automation", "productivity", "development"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Text Processing :: General",
    "Topic :: Utilities",
]
dependencies = [
    "PyQt6>=6.4.0",
    "aiohttp>=3.8.0",
    "asyncio>=3.4.3",
    "requests>=2.28.0",
    "python-dotenv>=0.19.0",
]

[project.urls]
Homepage = "https://github.com/xraisen/agentic-ai"
Documentation = "https://agentic-ai.example.com/docs/"
Repository = "https://github.com/xraisen/agentic-ai.git"
Issues = "https://github.com/xraisen/agentic-ai/issues"
Changelog = "https://github.com/xraisen/agentic-ai/blob/main/CHANGELOG.md"

[project.scripts]
agentic-ai = "agentic_ai.main:main"
agentic-ai-gui = "agentic_ai.gui:main"

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["agentic_ai"]

[tool.setuptools.package-data]
agentic_ai = [
    "assets/*",
    "config/*.json",
    "*.json",
]

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/docs
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "DJANGO", "FIRSTPARTY", "LOCALFOLDER"]
known_first_party = ["agentic_ai"]
known_django = ["django"]
suffixes = [".py", ".pyi"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
branch = true
source = ["src"]
omit = [
    "tests/*",
    "setup.py",
    "conftest.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
ignore_errors = true
omit = [
    "tests/*",
    "setup.py",
    "conftest.py",
    "*/__init__.py",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]

[tool.ruff]
line-length = 88
target-version = "py38"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]
exclude = [
    ".git",
    ".venv",
    "venv",
    "env",
    "build",
    "dist",
]

[tool.ruff.isort]
known-first-party = ["agentic_ai"]
known-third-party = ["pytest"]

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101"] 